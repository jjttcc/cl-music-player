#!/bin/env ruby

require_relative './configuration'
require_relative './player'
require_relative './optionstate'

opt = OptionState.new
configuration = Configuration.new(opt)
dbfile = configuration.dbfile
player = Player.new
if opt.cl_error
  puts opt.usage
  exit 1
end
args = opt.regular_arguments
list = []
i = 0
nonmatches = []
args.each do |arg|
  l = dbfile.matchesfor(arg)
  if l.empty?
    if not dbfile.dbfile_newly_created
      nonmatches << arg
    else
      $stderr.puts "No matches found for #{arg}"
    end
  end
  list += l
end
# If some arguments did not match any files, try rebuilding the database.
if not nonmatches.empty?
  dbfile.append_to_database(nonmatches)
  nonmatches.each do |ptrn|
    l = dbfile.matchesfor(ptrn)
    if l.empty?
      $stderr.puts "No matches found for #{ptrn}"
    end
    list += l
  end
end

if opt.listfiles
  output = list.join("\n")
  pager = ENV['PAGER'] || 'more'
  begin
    IO.popen(pager, "w") { |f| f.puts output }
  rescue
  end
end
if not opt.report_only
  if list.length > 0
    player.playfiles(list)
  end
end
